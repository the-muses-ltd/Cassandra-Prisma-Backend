module.exports = {
  typeDefs: // Code generated by Prisma (prisma@1.34.2). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateCategory {
  count: Int!
}

type AggregateComment {
  count: Int!
}

type AggregateExternalResource {
  count: Int!
}

type AggregateReview {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVideo {
  count: Int!
}

type AggregateVote {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Category {
  id: ID!
  category: String
  video: Video
  externalResource: ExternalResource
}

type CategoryConnection {
  pageInfo: PageInfo!
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  id: ID
  category: String
  video: VideoCreateOneWithoutCategoriesInput
  externalResource: ExternalResourceCreateOneWithoutCategoriesInput
}

input CategoryCreateManyWithoutExternalResourceInput {
  create: [CategoryCreateWithoutExternalResourceInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateManyWithoutVideoInput {
  create: [CategoryCreateWithoutVideoInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateWithoutExternalResourceInput {
  id: ID
  category: String
  video: VideoCreateOneWithoutCategoriesInput
}

input CategoryCreateWithoutVideoInput {
  id: ID
  category: String
  externalResource: ExternalResourceCreateOneWithoutCategoriesInput
}

type CategoryEdge {
  node: Category!
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  category_ASC
  category_DESC
}

type CategoryPreviousValues {
  id: ID!
  category: String
}

input CategoryScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  category: String
  category_not: String
  category_in: [String!]
  category_not_in: [String!]
  category_lt: String
  category_lte: String
  category_gt: String
  category_gte: String
  category_contains: String
  category_not_contains: String
  category_starts_with: String
  category_not_starts_with: String
  category_ends_with: String
  category_not_ends_with: String
  AND: [CategoryScalarWhereInput!]
  OR: [CategoryScalarWhereInput!]
  NOT: [CategoryScalarWhereInput!]
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
  AND: [CategorySubscriptionWhereInput!]
  OR: [CategorySubscriptionWhereInput!]
  NOT: [CategorySubscriptionWhereInput!]
}

input CategoryUpdateInput {
  category: String
  video: VideoUpdateOneWithoutCategoriesInput
  externalResource: ExternalResourceUpdateOneWithoutCategoriesInput
}

input CategoryUpdateManyDataInput {
  category: String
}

input CategoryUpdateManyMutationInput {
  category: String
}

input CategoryUpdateManyWithoutExternalResourceInput {
  create: [CategoryCreateWithoutExternalResourceInput!]
  delete: [CategoryWhereUniqueInput!]
  connect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutExternalResourceInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutExternalResourceInput!]
  deleteMany: [CategoryScalarWhereInput!]
  updateMany: [CategoryUpdateManyWithWhereNestedInput!]
}

input CategoryUpdateManyWithoutVideoInput {
  create: [CategoryCreateWithoutVideoInput!]
  delete: [CategoryWhereUniqueInput!]
  connect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutVideoInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutVideoInput!]
  deleteMany: [CategoryScalarWhereInput!]
  updateMany: [CategoryUpdateManyWithWhereNestedInput!]
}

input CategoryUpdateManyWithWhereNestedInput {
  where: CategoryScalarWhereInput!
  data: CategoryUpdateManyDataInput!
}

input CategoryUpdateWithoutExternalResourceDataInput {
  category: String
  video: VideoUpdateOneWithoutCategoriesInput
}

input CategoryUpdateWithoutVideoDataInput {
  category: String
  externalResource: ExternalResourceUpdateOneWithoutCategoriesInput
}

input CategoryUpdateWithWhereUniqueWithoutExternalResourceInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutExternalResourceDataInput!
}

input CategoryUpdateWithWhereUniqueWithoutVideoInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutVideoDataInput!
}

input CategoryUpsertWithWhereUniqueWithoutExternalResourceInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutExternalResourceDataInput!
  create: CategoryCreateWithoutExternalResourceInput!
}

input CategoryUpsertWithWhereUniqueWithoutVideoInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutVideoDataInput!
  create: CategoryCreateWithoutVideoInput!
}

input CategoryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  category: String
  category_not: String
  category_in: [String!]
  category_not_in: [String!]
  category_lt: String
  category_lte: String
  category_gt: String
  category_gte: String
  category_contains: String
  category_not_contains: String
  category_starts_with: String
  category_not_starts_with: String
  category_ends_with: String
  category_not_ends_with: String
  video: VideoWhereInput
  externalResource: ExternalResourceWhereInput
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
}

input CategoryWhereUniqueInput {
  id: ID
}

type Comment {
  id: ID!
  comment: String!
  user: User
  externalResource: ExternalResource
  video: Video
}

type CommentConnection {
  pageInfo: PageInfo!
  edges: [CommentEdge]!
  aggregate: AggregateComment!
}

input CommentCreateInput {
  id: ID
  comment: String!
  user: UserCreateOneWithoutCommentsInput
  externalResource: ExternalResourceCreateOneWithoutCommentsInput
  video: VideoCreateOneWithoutCommentsInput
}

input CommentCreateManyWithoutExternalResourceInput {
  create: [CommentCreateWithoutExternalResourceInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateManyWithoutUserInput {
  create: [CommentCreateWithoutUserInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateManyWithoutVideoInput {
  create: [CommentCreateWithoutVideoInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateWithoutExternalResourceInput {
  id: ID
  comment: String!
  user: UserCreateOneWithoutCommentsInput
  video: VideoCreateOneWithoutCommentsInput
}

input CommentCreateWithoutUserInput {
  id: ID
  comment: String!
  externalResource: ExternalResourceCreateOneWithoutCommentsInput
  video: VideoCreateOneWithoutCommentsInput
}

input CommentCreateWithoutVideoInput {
  id: ID
  comment: String!
  user: UserCreateOneWithoutCommentsInput
  externalResource: ExternalResourceCreateOneWithoutCommentsInput
}

type CommentEdge {
  node: Comment!
  cursor: String!
}

enum CommentOrderByInput {
  id_ASC
  id_DESC
  comment_ASC
  comment_DESC
}

type CommentPreviousValues {
  id: ID!
  comment: String!
}

input CommentScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  comment: String
  comment_not: String
  comment_in: [String!]
  comment_not_in: [String!]
  comment_lt: String
  comment_lte: String
  comment_gt: String
  comment_gte: String
  comment_contains: String
  comment_not_contains: String
  comment_starts_with: String
  comment_not_starts_with: String
  comment_ends_with: String
  comment_not_ends_with: String
  AND: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  NOT: [CommentScalarWhereInput!]
}

type CommentSubscriptionPayload {
  mutation: MutationType!
  node: Comment
  updatedFields: [String!]
  previousValues: CommentPreviousValues
}

input CommentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CommentWhereInput
  AND: [CommentSubscriptionWhereInput!]
  OR: [CommentSubscriptionWhereInput!]
  NOT: [CommentSubscriptionWhereInput!]
}

input CommentUpdateInput {
  comment: String
  user: UserUpdateOneWithoutCommentsInput
  externalResource: ExternalResourceUpdateOneWithoutCommentsInput
  video: VideoUpdateOneWithoutCommentsInput
}

input CommentUpdateManyDataInput {
  comment: String
}

input CommentUpdateManyMutationInput {
  comment: String
}

input CommentUpdateManyWithoutExternalResourceInput {
  create: [CommentCreateWithoutExternalResourceInput!]
  delete: [CommentWhereUniqueInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutExternalResourceInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutExternalResourceInput!]
  deleteMany: [CommentScalarWhereInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
}

input CommentUpdateManyWithoutUserInput {
  create: [CommentCreateWithoutUserInput!]
  delete: [CommentWhereUniqueInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [CommentScalarWhereInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
}

input CommentUpdateManyWithoutVideoInput {
  create: [CommentCreateWithoutVideoInput!]
  delete: [CommentWhereUniqueInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutVideoInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutVideoInput!]
  deleteMany: [CommentScalarWhereInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
}

input CommentUpdateManyWithWhereNestedInput {
  where: CommentScalarWhereInput!
  data: CommentUpdateManyDataInput!
}

input CommentUpdateWithoutExternalResourceDataInput {
  comment: String
  user: UserUpdateOneWithoutCommentsInput
  video: VideoUpdateOneWithoutCommentsInput
}

input CommentUpdateWithoutUserDataInput {
  comment: String
  externalResource: ExternalResourceUpdateOneWithoutCommentsInput
  video: VideoUpdateOneWithoutCommentsInput
}

input CommentUpdateWithoutVideoDataInput {
  comment: String
  user: UserUpdateOneWithoutCommentsInput
  externalResource: ExternalResourceUpdateOneWithoutCommentsInput
}

input CommentUpdateWithWhereUniqueWithoutExternalResourceInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutExternalResourceDataInput!
}

input CommentUpdateWithWhereUniqueWithoutUserInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutUserDataInput!
}

input CommentUpdateWithWhereUniqueWithoutVideoInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutVideoDataInput!
}

input CommentUpsertWithWhereUniqueWithoutExternalResourceInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutExternalResourceDataInput!
  create: CommentCreateWithoutExternalResourceInput!
}

input CommentUpsertWithWhereUniqueWithoutUserInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutUserDataInput!
  create: CommentCreateWithoutUserInput!
}

input CommentUpsertWithWhereUniqueWithoutVideoInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutVideoDataInput!
  create: CommentCreateWithoutVideoInput!
}

input CommentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  comment: String
  comment_not: String
  comment_in: [String!]
  comment_not_in: [String!]
  comment_lt: String
  comment_lte: String
  comment_gt: String
  comment_gte: String
  comment_contains: String
  comment_not_contains: String
  comment_starts_with: String
  comment_not_starts_with: String
  comment_ends_with: String
  comment_not_ends_with: String
  user: UserWhereInput
  externalResource: ExternalResourceWhereInput
  video: VideoWhereInput
  AND: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  NOT: [CommentWhereInput!]
}

input CommentWhereUniqueInput {
  id: ID
}

type ExternalResource {
  id: ID!
  title: String
  description: String
  linkURL: String
  logoURL: String
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]
}

type ExternalResourceConnection {
  pageInfo: PageInfo!
  edges: [ExternalResourceEdge]!
  aggregate: AggregateExternalResource!
}

input ExternalResourceCreateInput {
  id: ID
  title: String
  description: String
  linkURL: String
  logoURL: String
  categories: CategoryCreateManyWithoutExternalResourceInput
  reviews: ReviewCreateManyWithoutExternalResourceInput
  comments: CommentCreateManyWithoutExternalResourceInput
  votes: VoteCreateManyWithoutExternalResourceInput
}

input ExternalResourceCreateOneWithoutCategoriesInput {
  create: ExternalResourceCreateWithoutCategoriesInput
  connect: ExternalResourceWhereUniqueInput
}

input ExternalResourceCreateOneWithoutCommentsInput {
  create: ExternalResourceCreateWithoutCommentsInput
  connect: ExternalResourceWhereUniqueInput
}

input ExternalResourceCreateOneWithoutReviewsInput {
  create: ExternalResourceCreateWithoutReviewsInput
  connect: ExternalResourceWhereUniqueInput
}

input ExternalResourceCreateOneWithoutVotesInput {
  create: ExternalResourceCreateWithoutVotesInput
  connect: ExternalResourceWhereUniqueInput
}

input ExternalResourceCreateWithoutCategoriesInput {
  id: ID
  title: String
  description: String
  linkURL: String
  logoURL: String
  reviews: ReviewCreateManyWithoutExternalResourceInput
  comments: CommentCreateManyWithoutExternalResourceInput
  votes: VoteCreateManyWithoutExternalResourceInput
}

input ExternalResourceCreateWithoutCommentsInput {
  id: ID
  title: String
  description: String
  linkURL: String
  logoURL: String
  categories: CategoryCreateManyWithoutExternalResourceInput
  reviews: ReviewCreateManyWithoutExternalResourceInput
  votes: VoteCreateManyWithoutExternalResourceInput
}

input ExternalResourceCreateWithoutReviewsInput {
  id: ID
  title: String
  description: String
  linkURL: String
  logoURL: String
  categories: CategoryCreateManyWithoutExternalResourceInput
  comments: CommentCreateManyWithoutExternalResourceInput
  votes: VoteCreateManyWithoutExternalResourceInput
}

input ExternalResourceCreateWithoutVotesInput {
  id: ID
  title: String
  description: String
  linkURL: String
  logoURL: String
  categories: CategoryCreateManyWithoutExternalResourceInput
  reviews: ReviewCreateManyWithoutExternalResourceInput
  comments: CommentCreateManyWithoutExternalResourceInput
}

type ExternalResourceEdge {
  node: ExternalResource!
  cursor: String!
}

enum ExternalResourceOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  linkURL_ASC
  linkURL_DESC
  logoURL_ASC
  logoURL_DESC
}

type ExternalResourcePreviousValues {
  id: ID!
  title: String
  description: String
  linkURL: String
  logoURL: String
}

type ExternalResourceSubscriptionPayload {
  mutation: MutationType!
  node: ExternalResource
  updatedFields: [String!]
  previousValues: ExternalResourcePreviousValues
}

input ExternalResourceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ExternalResourceWhereInput
  AND: [ExternalResourceSubscriptionWhereInput!]
  OR: [ExternalResourceSubscriptionWhereInput!]
  NOT: [ExternalResourceSubscriptionWhereInput!]
}

input ExternalResourceUpdateInput {
  title: String
  description: String
  linkURL: String
  logoURL: String
  categories: CategoryUpdateManyWithoutExternalResourceInput
  reviews: ReviewUpdateManyWithoutExternalResourceInput
  comments: CommentUpdateManyWithoutExternalResourceInput
  votes: VoteUpdateManyWithoutExternalResourceInput
}

input ExternalResourceUpdateManyMutationInput {
  title: String
  description: String
  linkURL: String
  logoURL: String
}

input ExternalResourceUpdateOneWithoutCategoriesInput {
  create: ExternalResourceCreateWithoutCategoriesInput
  update: ExternalResourceUpdateWithoutCategoriesDataInput
  upsert: ExternalResourceUpsertWithoutCategoriesInput
  delete: Boolean
  disconnect: Boolean
  connect: ExternalResourceWhereUniqueInput
}

input ExternalResourceUpdateOneWithoutCommentsInput {
  create: ExternalResourceCreateWithoutCommentsInput
  update: ExternalResourceUpdateWithoutCommentsDataInput
  upsert: ExternalResourceUpsertWithoutCommentsInput
  delete: Boolean
  disconnect: Boolean
  connect: ExternalResourceWhereUniqueInput
}

input ExternalResourceUpdateOneWithoutReviewsInput {
  create: ExternalResourceCreateWithoutReviewsInput
  update: ExternalResourceUpdateWithoutReviewsDataInput
  upsert: ExternalResourceUpsertWithoutReviewsInput
  delete: Boolean
  disconnect: Boolean
  connect: ExternalResourceWhereUniqueInput
}

input ExternalResourceUpdateOneWithoutVotesInput {
  create: ExternalResourceCreateWithoutVotesInput
  update: ExternalResourceUpdateWithoutVotesDataInput
  upsert: ExternalResourceUpsertWithoutVotesInput
  delete: Boolean
  disconnect: Boolean
  connect: ExternalResourceWhereUniqueInput
}

input ExternalResourceUpdateWithoutCategoriesDataInput {
  title: String
  description: String
  linkURL: String
  logoURL: String
  reviews: ReviewUpdateManyWithoutExternalResourceInput
  comments: CommentUpdateManyWithoutExternalResourceInput
  votes: VoteUpdateManyWithoutExternalResourceInput
}

input ExternalResourceUpdateWithoutCommentsDataInput {
  title: String
  description: String
  linkURL: String
  logoURL: String
  categories: CategoryUpdateManyWithoutExternalResourceInput
  reviews: ReviewUpdateManyWithoutExternalResourceInput
  votes: VoteUpdateManyWithoutExternalResourceInput
}

input ExternalResourceUpdateWithoutReviewsDataInput {
  title: String
  description: String
  linkURL: String
  logoURL: String
  categories: CategoryUpdateManyWithoutExternalResourceInput
  comments: CommentUpdateManyWithoutExternalResourceInput
  votes: VoteUpdateManyWithoutExternalResourceInput
}

input ExternalResourceUpdateWithoutVotesDataInput {
  title: String
  description: String
  linkURL: String
  logoURL: String
  categories: CategoryUpdateManyWithoutExternalResourceInput
  reviews: ReviewUpdateManyWithoutExternalResourceInput
  comments: CommentUpdateManyWithoutExternalResourceInput
}

input ExternalResourceUpsertWithoutCategoriesInput {
  update: ExternalResourceUpdateWithoutCategoriesDataInput!
  create: ExternalResourceCreateWithoutCategoriesInput!
}

input ExternalResourceUpsertWithoutCommentsInput {
  update: ExternalResourceUpdateWithoutCommentsDataInput!
  create: ExternalResourceCreateWithoutCommentsInput!
}

input ExternalResourceUpsertWithoutReviewsInput {
  update: ExternalResourceUpdateWithoutReviewsDataInput!
  create: ExternalResourceCreateWithoutReviewsInput!
}

input ExternalResourceUpsertWithoutVotesInput {
  update: ExternalResourceUpdateWithoutVotesDataInput!
  create: ExternalResourceCreateWithoutVotesInput!
}

input ExternalResourceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  linkURL: String
  linkURL_not: String
  linkURL_in: [String!]
  linkURL_not_in: [String!]
  linkURL_lt: String
  linkURL_lte: String
  linkURL_gt: String
  linkURL_gte: String
  linkURL_contains: String
  linkURL_not_contains: String
  linkURL_starts_with: String
  linkURL_not_starts_with: String
  linkURL_ends_with: String
  linkURL_not_ends_with: String
  logoURL: String
  logoURL_not: String
  logoURL_in: [String!]
  logoURL_not_in: [String!]
  logoURL_lt: String
  logoURL_lte: String
  logoURL_gt: String
  logoURL_gte: String
  logoURL_contains: String
  logoURL_not_contains: String
  logoURL_starts_with: String
  logoURL_not_starts_with: String
  logoURL_ends_with: String
  logoURL_not_ends_with: String
  categories_every: CategoryWhereInput
  categories_some: CategoryWhereInput
  categories_none: CategoryWhereInput
  reviews_every: ReviewWhereInput
  reviews_some: ReviewWhereInput
  reviews_none: ReviewWhereInput
  comments_every: CommentWhereInput
  comments_some: CommentWhereInput
  comments_none: CommentWhereInput
  votes_every: VoteWhereInput
  votes_some: VoteWhereInput
  votes_none: VoteWhereInput
  AND: [ExternalResourceWhereInput!]
  OR: [ExternalResourceWhereInput!]
  NOT: [ExternalResourceWhereInput!]
}

input ExternalResourceWhereUniqueInput {
  id: ID
}

scalar Long

type Mutation {
  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  createComment(data: CommentCreateInput!): Comment!
  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updateManyComments(data: CommentUpdateManyMutationInput!, where: CommentWhereInput): BatchPayload!
  upsertComment(where: CommentWhereUniqueInput!, create: CommentCreateInput!, update: CommentUpdateInput!): Comment!
  deleteComment(where: CommentWhereUniqueInput!): Comment
  deleteManyComments(where: CommentWhereInput): BatchPayload!
  createExternalResource(data: ExternalResourceCreateInput!): ExternalResource!
  updateExternalResource(data: ExternalResourceUpdateInput!, where: ExternalResourceWhereUniqueInput!): ExternalResource
  updateManyExternalResources(data: ExternalResourceUpdateManyMutationInput!, where: ExternalResourceWhereInput): BatchPayload!
  upsertExternalResource(where: ExternalResourceWhereUniqueInput!, create: ExternalResourceCreateInput!, update: ExternalResourceUpdateInput!): ExternalResource!
  deleteExternalResource(where: ExternalResourceWhereUniqueInput!): ExternalResource
  deleteManyExternalResources(where: ExternalResourceWhereInput): BatchPayload!
  createReview(data: ReviewCreateInput!): Review!
  updateReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review
  updateManyReviews(data: ReviewUpdateManyMutationInput!, where: ReviewWhereInput): BatchPayload!
  upsertReview(where: ReviewWhereUniqueInput!, create: ReviewCreateInput!, update: ReviewUpdateInput!): Review!
  deleteReview(where: ReviewWhereUniqueInput!): Review
  deleteManyReviews(where: ReviewWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  createVideo(data: VideoCreateInput!): Video!
  updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
  updateManyVideos(data: VideoUpdateManyMutationInput!, where: VideoWhereInput): BatchPayload!
  upsertVideo(where: VideoWhereUniqueInput!, create: VideoCreateInput!, update: VideoUpdateInput!): Video!
  deleteVideo(where: VideoWhereUniqueInput!): Video
  deleteManyVideos(where: VideoWhereInput): BatchPayload!
  createVote(data: VoteCreateInput!): Vote!
  updateVote(data: VoteUpdateInput!, where: VoteWhereUniqueInput!): Vote
  updateManyVotes(data: VoteUpdateManyMutationInput!, where: VoteWhereInput): BatchPayload!
  upsertVote(where: VoteWhereUniqueInput!, create: VoteCreateInput!, update: VoteUpdateInput!): Vote!
  deleteVote(where: VoteWhereUniqueInput!): Vote
  deleteManyVotes(where: VoteWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  category(where: CategoryWhereUniqueInput!): Category
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!
  comment(where: CommentWhereUniqueInput!): Comment
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment]!
  commentsConnection(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection!
  externalResource(where: ExternalResourceWhereUniqueInput!): ExternalResource
  externalResources(where: ExternalResourceWhereInput, orderBy: ExternalResourceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ExternalResource]!
  externalResourcesConnection(where: ExternalResourceWhereInput, orderBy: ExternalResourceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ExternalResourceConnection!
  review(where: ReviewWhereUniqueInput!): Review
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review]!
  reviewsConnection(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReviewConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  video(where: VideoWhereUniqueInput!): Video
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video]!
  videosConnection(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoConnection!
  vote(where: VoteWhereUniqueInput!): Vote
  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote]!
  votesConnection(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection!
  node(id: ID!): Node
}

type Review {
  id: ID!
  rating: Int!
  review: String!
  user: User
  externalResource: ExternalResource
  video: Video
}

type ReviewConnection {
  pageInfo: PageInfo!
  edges: [ReviewEdge]!
  aggregate: AggregateReview!
}

input ReviewCreateInput {
  id: ID
  rating: Int!
  review: String!
  user: UserCreateOneWithoutReviewsInput
  externalResource: ExternalResourceCreateOneWithoutReviewsInput
  video: VideoCreateOneWithoutReviewsInput
}

input ReviewCreateManyWithoutExternalResourceInput {
  create: [ReviewCreateWithoutExternalResourceInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateManyWithoutUserInput {
  create: [ReviewCreateWithoutUserInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateManyWithoutVideoInput {
  create: [ReviewCreateWithoutVideoInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateWithoutExternalResourceInput {
  id: ID
  rating: Int!
  review: String!
  user: UserCreateOneWithoutReviewsInput
  video: VideoCreateOneWithoutReviewsInput
}

input ReviewCreateWithoutUserInput {
  id: ID
  rating: Int!
  review: String!
  externalResource: ExternalResourceCreateOneWithoutReviewsInput
  video: VideoCreateOneWithoutReviewsInput
}

input ReviewCreateWithoutVideoInput {
  id: ID
  rating: Int!
  review: String!
  user: UserCreateOneWithoutReviewsInput
  externalResource: ExternalResourceCreateOneWithoutReviewsInput
}

type ReviewEdge {
  node: Review!
  cursor: String!
}

enum ReviewOrderByInput {
  id_ASC
  id_DESC
  rating_ASC
  rating_DESC
  review_ASC
  review_DESC
}

type ReviewPreviousValues {
  id: ID!
  rating: Int!
  review: String!
}

input ReviewScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  rating: Int
  rating_not: Int
  rating_in: [Int!]
  rating_not_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_gt: Int
  rating_gte: Int
  review: String
  review_not: String
  review_in: [String!]
  review_not_in: [String!]
  review_lt: String
  review_lte: String
  review_gt: String
  review_gte: String
  review_contains: String
  review_not_contains: String
  review_starts_with: String
  review_not_starts_with: String
  review_ends_with: String
  review_not_ends_with: String
  AND: [ReviewScalarWhereInput!]
  OR: [ReviewScalarWhereInput!]
  NOT: [ReviewScalarWhereInput!]
}

type ReviewSubscriptionPayload {
  mutation: MutationType!
  node: Review
  updatedFields: [String!]
  previousValues: ReviewPreviousValues
}

input ReviewSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReviewWhereInput
  AND: [ReviewSubscriptionWhereInput!]
  OR: [ReviewSubscriptionWhereInput!]
  NOT: [ReviewSubscriptionWhereInput!]
}

input ReviewUpdateInput {
  rating: Int
  review: String
  user: UserUpdateOneWithoutReviewsInput
  externalResource: ExternalResourceUpdateOneWithoutReviewsInput
  video: VideoUpdateOneWithoutReviewsInput
}

input ReviewUpdateManyDataInput {
  rating: Int
  review: String
}

input ReviewUpdateManyMutationInput {
  rating: Int
  review: String
}

input ReviewUpdateManyWithoutExternalResourceInput {
  create: [ReviewCreateWithoutExternalResourceInput!]
  delete: [ReviewWhereUniqueInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutExternalResourceInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutExternalResourceInput!]
  deleteMany: [ReviewScalarWhereInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
}

input ReviewUpdateManyWithoutUserInput {
  create: [ReviewCreateWithoutUserInput!]
  delete: [ReviewWhereUniqueInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [ReviewScalarWhereInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
}

input ReviewUpdateManyWithoutVideoInput {
  create: [ReviewCreateWithoutVideoInput!]
  delete: [ReviewWhereUniqueInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutVideoInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutVideoInput!]
  deleteMany: [ReviewScalarWhereInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
}

input ReviewUpdateManyWithWhereNestedInput {
  where: ReviewScalarWhereInput!
  data: ReviewUpdateManyDataInput!
}

input ReviewUpdateWithoutExternalResourceDataInput {
  rating: Int
  review: String
  user: UserUpdateOneWithoutReviewsInput
  video: VideoUpdateOneWithoutReviewsInput
}

input ReviewUpdateWithoutUserDataInput {
  rating: Int
  review: String
  externalResource: ExternalResourceUpdateOneWithoutReviewsInput
  video: VideoUpdateOneWithoutReviewsInput
}

input ReviewUpdateWithoutVideoDataInput {
  rating: Int
  review: String
  user: UserUpdateOneWithoutReviewsInput
  externalResource: ExternalResourceUpdateOneWithoutReviewsInput
}

input ReviewUpdateWithWhereUniqueWithoutExternalResourceInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutExternalResourceDataInput!
}

input ReviewUpdateWithWhereUniqueWithoutUserInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutUserDataInput!
}

input ReviewUpdateWithWhereUniqueWithoutVideoInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutVideoDataInput!
}

input ReviewUpsertWithWhereUniqueWithoutExternalResourceInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutExternalResourceDataInput!
  create: ReviewCreateWithoutExternalResourceInput!
}

input ReviewUpsertWithWhereUniqueWithoutUserInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutUserDataInput!
  create: ReviewCreateWithoutUserInput!
}

input ReviewUpsertWithWhereUniqueWithoutVideoInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutVideoDataInput!
  create: ReviewCreateWithoutVideoInput!
}

input ReviewWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  rating: Int
  rating_not: Int
  rating_in: [Int!]
  rating_not_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_gt: Int
  rating_gte: Int
  review: String
  review_not: String
  review_in: [String!]
  review_not_in: [String!]
  review_lt: String
  review_lte: String
  review_gt: String
  review_gte: String
  review_contains: String
  review_not_contains: String
  review_starts_with: String
  review_not_starts_with: String
  review_ends_with: String
  review_not_ends_with: String
  user: UserWhereInput
  externalResource: ExternalResourceWhereInput
  video: VideoWhereInput
  AND: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  NOT: [ReviewWhereInput!]
}

input ReviewWhereUniqueInput {
  id: ID
}

type Subscription {
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  comment(where: CommentSubscriptionWhereInput): CommentSubscriptionPayload
  externalResource(where: ExternalResourceSubscriptionWhereInput): ExternalResourceSubscriptionPayload
  review(where: ReviewSubscriptionWhereInput): ReviewSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  video(where: VideoSubscriptionWhereInput): VideoSubscriptionPayload
  vote(where: VoteSubscriptionWhereInput): VoteSubscriptionPayload
}

type User {
  id: ID!
  userName: String!
  email: String
  password: String!
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  userName: String!
  email: String
  password: String!
  reviews: ReviewCreateManyWithoutUserInput
  comments: CommentCreateManyWithoutUserInput
  votes: VoteCreateManyWithoutUserInput
}

input UserCreateOneWithoutCommentsInput {
  create: UserCreateWithoutCommentsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutReviewsInput {
  create: UserCreateWithoutReviewsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutVotesInput {
  create: UserCreateWithoutVotesInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCommentsInput {
  id: ID
  userName: String!
  email: String
  password: String!
  reviews: ReviewCreateManyWithoutUserInput
  votes: VoteCreateManyWithoutUserInput
}

input UserCreateWithoutReviewsInput {
  id: ID
  userName: String!
  email: String
  password: String!
  comments: CommentCreateManyWithoutUserInput
  votes: VoteCreateManyWithoutUserInput
}

input UserCreateWithoutVotesInput {
  id: ID
  userName: String!
  email: String
  password: String!
  reviews: ReviewCreateManyWithoutUserInput
  comments: CommentCreateManyWithoutUserInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  userName_ASC
  userName_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
}

type UserPreviousValues {
  id: ID!
  userName: String!
  email: String
  password: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  userName: String
  email: String
  password: String
  reviews: ReviewUpdateManyWithoutUserInput
  comments: CommentUpdateManyWithoutUserInput
  votes: VoteUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  userName: String
  email: String
  password: String
}

input UserUpdateOneWithoutCommentsInput {
  create: UserCreateWithoutCommentsInput
  update: UserUpdateWithoutCommentsDataInput
  upsert: UserUpsertWithoutCommentsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutReviewsInput {
  create: UserCreateWithoutReviewsInput
  update: UserUpdateWithoutReviewsDataInput
  upsert: UserUpsertWithoutReviewsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutVotesInput {
  create: UserCreateWithoutVotesInput
  update: UserUpdateWithoutVotesDataInput
  upsert: UserUpsertWithoutVotesInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutCommentsDataInput {
  userName: String
  email: String
  password: String
  reviews: ReviewUpdateManyWithoutUserInput
  votes: VoteUpdateManyWithoutUserInput
}

input UserUpdateWithoutReviewsDataInput {
  userName: String
  email: String
  password: String
  comments: CommentUpdateManyWithoutUserInput
  votes: VoteUpdateManyWithoutUserInput
}

input UserUpdateWithoutVotesDataInput {
  userName: String
  email: String
  password: String
  reviews: ReviewUpdateManyWithoutUserInput
  comments: CommentUpdateManyWithoutUserInput
}

input UserUpsertWithoutCommentsInput {
  update: UserUpdateWithoutCommentsDataInput!
  create: UserCreateWithoutCommentsInput!
}

input UserUpsertWithoutReviewsInput {
  update: UserUpdateWithoutReviewsDataInput!
  create: UserCreateWithoutReviewsInput!
}

input UserUpsertWithoutVotesInput {
  update: UserUpdateWithoutVotesDataInput!
  create: UserCreateWithoutVotesInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  userName: String
  userName_not: String
  userName_in: [String!]
  userName_not_in: [String!]
  userName_lt: String
  userName_lte: String
  userName_gt: String
  userName_gte: String
  userName_contains: String
  userName_not_contains: String
  userName_starts_with: String
  userName_not_starts_with: String
  userName_ends_with: String
  userName_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  reviews_every: ReviewWhereInput
  reviews_some: ReviewWhereInput
  reviews_none: ReviewWhereInput
  comments_every: CommentWhereInput
  comments_some: CommentWhereInput
  comments_none: CommentWhereInput
  votes_every: VoteWhereInput
  votes_some: VoteWhereInput
  votes_none: VoteWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
}

type Video {
  id: ID!
  title: String
  description: String
  externalURL: String
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]
}

type VideoConnection {
  pageInfo: PageInfo!
  edges: [VideoEdge]!
  aggregate: AggregateVideo!
}

input VideoCreateInput {
  id: ID
  title: String
  description: String
  externalURL: String
  categories: CategoryCreateManyWithoutVideoInput
  reviews: ReviewCreateManyWithoutVideoInput
  comments: CommentCreateManyWithoutVideoInput
  votes: VoteCreateManyWithoutVideoInput
}

input VideoCreateOneWithoutCategoriesInput {
  create: VideoCreateWithoutCategoriesInput
  connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutCommentsInput {
  create: VideoCreateWithoutCommentsInput
  connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutReviewsInput {
  create: VideoCreateWithoutReviewsInput
  connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutVotesInput {
  create: VideoCreateWithoutVotesInput
  connect: VideoWhereUniqueInput
}

input VideoCreateWithoutCategoriesInput {
  id: ID
  title: String
  description: String
  externalURL: String
  reviews: ReviewCreateManyWithoutVideoInput
  comments: CommentCreateManyWithoutVideoInput
  votes: VoteCreateManyWithoutVideoInput
}

input VideoCreateWithoutCommentsInput {
  id: ID
  title: String
  description: String
  externalURL: String
  categories: CategoryCreateManyWithoutVideoInput
  reviews: ReviewCreateManyWithoutVideoInput
  votes: VoteCreateManyWithoutVideoInput
}

input VideoCreateWithoutReviewsInput {
  id: ID
  title: String
  description: String
  externalURL: String
  categories: CategoryCreateManyWithoutVideoInput
  comments: CommentCreateManyWithoutVideoInput
  votes: VoteCreateManyWithoutVideoInput
}

input VideoCreateWithoutVotesInput {
  id: ID
  title: String
  description: String
  externalURL: String
  categories: CategoryCreateManyWithoutVideoInput
  reviews: ReviewCreateManyWithoutVideoInput
  comments: CommentCreateManyWithoutVideoInput
}

type VideoEdge {
  node: Video!
  cursor: String!
}

enum VideoOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  externalURL_ASC
  externalURL_DESC
}

type VideoPreviousValues {
  id: ID!
  title: String
  description: String
  externalURL: String
}

type VideoSubscriptionPayload {
  mutation: MutationType!
  node: Video
  updatedFields: [String!]
  previousValues: VideoPreviousValues
}

input VideoSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VideoWhereInput
  AND: [VideoSubscriptionWhereInput!]
  OR: [VideoSubscriptionWhereInput!]
  NOT: [VideoSubscriptionWhereInput!]
}

input VideoUpdateInput {
  title: String
  description: String
  externalURL: String
  categories: CategoryUpdateManyWithoutVideoInput
  reviews: ReviewUpdateManyWithoutVideoInput
  comments: CommentUpdateManyWithoutVideoInput
  votes: VoteUpdateManyWithoutVideoInput
}

input VideoUpdateManyMutationInput {
  title: String
  description: String
  externalURL: String
}

input VideoUpdateOneWithoutCategoriesInput {
  create: VideoCreateWithoutCategoriesInput
  update: VideoUpdateWithoutCategoriesDataInput
  upsert: VideoUpsertWithoutCategoriesInput
  delete: Boolean
  disconnect: Boolean
  connect: VideoWhereUniqueInput
}

input VideoUpdateOneWithoutCommentsInput {
  create: VideoCreateWithoutCommentsInput
  update: VideoUpdateWithoutCommentsDataInput
  upsert: VideoUpsertWithoutCommentsInput
  delete: Boolean
  disconnect: Boolean
  connect: VideoWhereUniqueInput
}

input VideoUpdateOneWithoutReviewsInput {
  create: VideoCreateWithoutReviewsInput
  update: VideoUpdateWithoutReviewsDataInput
  upsert: VideoUpsertWithoutReviewsInput
  delete: Boolean
  disconnect: Boolean
  connect: VideoWhereUniqueInput
}

input VideoUpdateOneWithoutVotesInput {
  create: VideoCreateWithoutVotesInput
  update: VideoUpdateWithoutVotesDataInput
  upsert: VideoUpsertWithoutVotesInput
  delete: Boolean
  disconnect: Boolean
  connect: VideoWhereUniqueInput
}

input VideoUpdateWithoutCategoriesDataInput {
  title: String
  description: String
  externalURL: String
  reviews: ReviewUpdateManyWithoutVideoInput
  comments: CommentUpdateManyWithoutVideoInput
  votes: VoteUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutCommentsDataInput {
  title: String
  description: String
  externalURL: String
  categories: CategoryUpdateManyWithoutVideoInput
  reviews: ReviewUpdateManyWithoutVideoInput
  votes: VoteUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutReviewsDataInput {
  title: String
  description: String
  externalURL: String
  categories: CategoryUpdateManyWithoutVideoInput
  comments: CommentUpdateManyWithoutVideoInput
  votes: VoteUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutVotesDataInput {
  title: String
  description: String
  externalURL: String
  categories: CategoryUpdateManyWithoutVideoInput
  reviews: ReviewUpdateManyWithoutVideoInput
  comments: CommentUpdateManyWithoutVideoInput
}

input VideoUpsertWithoutCategoriesInput {
  update: VideoUpdateWithoutCategoriesDataInput!
  create: VideoCreateWithoutCategoriesInput!
}

input VideoUpsertWithoutCommentsInput {
  update: VideoUpdateWithoutCommentsDataInput!
  create: VideoCreateWithoutCommentsInput!
}

input VideoUpsertWithoutReviewsInput {
  update: VideoUpdateWithoutReviewsDataInput!
  create: VideoCreateWithoutReviewsInput!
}

input VideoUpsertWithoutVotesInput {
  update: VideoUpdateWithoutVotesDataInput!
  create: VideoCreateWithoutVotesInput!
}

input VideoWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  externalURL: String
  externalURL_not: String
  externalURL_in: [String!]
  externalURL_not_in: [String!]
  externalURL_lt: String
  externalURL_lte: String
  externalURL_gt: String
  externalURL_gte: String
  externalURL_contains: String
  externalURL_not_contains: String
  externalURL_starts_with: String
  externalURL_not_starts_with: String
  externalURL_ends_with: String
  externalURL_not_ends_with: String
  categories_every: CategoryWhereInput
  categories_some: CategoryWhereInput
  categories_none: CategoryWhereInput
  reviews_every: ReviewWhereInput
  reviews_some: ReviewWhereInput
  reviews_none: ReviewWhereInput
  comments_every: CommentWhereInput
  comments_some: CommentWhereInput
  comments_none: CommentWhereInput
  votes_every: VoteWhereInput
  votes_some: VoteWhereInput
  votes_none: VoteWhereInput
  AND: [VideoWhereInput!]
  OR: [VideoWhereInput!]
  NOT: [VideoWhereInput!]
}

input VideoWhereUniqueInput {
  id: ID
}

type Vote {
  id: ID!
  positive: Boolean!
  user: User
  externalResource: ExternalResource
  video: Video
}

type VoteConnection {
  pageInfo: PageInfo!
  edges: [VoteEdge]!
  aggregate: AggregateVote!
}

input VoteCreateInput {
  id: ID
  positive: Boolean
  user: UserCreateOneWithoutVotesInput
  externalResource: ExternalResourceCreateOneWithoutVotesInput
  video: VideoCreateOneWithoutVotesInput
}

input VoteCreateManyWithoutExternalResourceInput {
  create: [VoteCreateWithoutExternalResourceInput!]
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateManyWithoutUserInput {
  create: [VoteCreateWithoutUserInput!]
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateManyWithoutVideoInput {
  create: [VoteCreateWithoutVideoInput!]
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateWithoutExternalResourceInput {
  id: ID
  positive: Boolean
  user: UserCreateOneWithoutVotesInput
  video: VideoCreateOneWithoutVotesInput
}

input VoteCreateWithoutUserInput {
  id: ID
  positive: Boolean
  externalResource: ExternalResourceCreateOneWithoutVotesInput
  video: VideoCreateOneWithoutVotesInput
}

input VoteCreateWithoutVideoInput {
  id: ID
  positive: Boolean
  user: UserCreateOneWithoutVotesInput
  externalResource: ExternalResourceCreateOneWithoutVotesInput
}

type VoteEdge {
  node: Vote!
  cursor: String!
}

enum VoteOrderByInput {
  id_ASC
  id_DESC
  positive_ASC
  positive_DESC
}

type VotePreviousValues {
  id: ID!
  positive: Boolean!
}

input VoteScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  positive: Boolean
  positive_not: Boolean
  AND: [VoteScalarWhereInput!]
  OR: [VoteScalarWhereInput!]
  NOT: [VoteScalarWhereInput!]
}

type VoteSubscriptionPayload {
  mutation: MutationType!
  node: Vote
  updatedFields: [String!]
  previousValues: VotePreviousValues
}

input VoteSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VoteWhereInput
  AND: [VoteSubscriptionWhereInput!]
  OR: [VoteSubscriptionWhereInput!]
  NOT: [VoteSubscriptionWhereInput!]
}

input VoteUpdateInput {
  positive: Boolean
  user: UserUpdateOneWithoutVotesInput
  externalResource: ExternalResourceUpdateOneWithoutVotesInput
  video: VideoUpdateOneWithoutVotesInput
}

input VoteUpdateManyDataInput {
  positive: Boolean
}

input VoteUpdateManyMutationInput {
  positive: Boolean
}

input VoteUpdateManyWithoutExternalResourceInput {
  create: [VoteCreateWithoutExternalResourceInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutExternalResourceInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutExternalResourceInput!]
  deleteMany: [VoteScalarWhereInput!]
  updateMany: [VoteUpdateManyWithWhereNestedInput!]
}

input VoteUpdateManyWithoutUserInput {
  create: [VoteCreateWithoutUserInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [VoteScalarWhereInput!]
  updateMany: [VoteUpdateManyWithWhereNestedInput!]
}

input VoteUpdateManyWithoutVideoInput {
  create: [VoteCreateWithoutVideoInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutVideoInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutVideoInput!]
  deleteMany: [VoteScalarWhereInput!]
  updateMany: [VoteUpdateManyWithWhereNestedInput!]
}

input VoteUpdateManyWithWhereNestedInput {
  where: VoteScalarWhereInput!
  data: VoteUpdateManyDataInput!
}

input VoteUpdateWithoutExternalResourceDataInput {
  positive: Boolean
  user: UserUpdateOneWithoutVotesInput
  video: VideoUpdateOneWithoutVotesInput
}

input VoteUpdateWithoutUserDataInput {
  positive: Boolean
  externalResource: ExternalResourceUpdateOneWithoutVotesInput
  video: VideoUpdateOneWithoutVotesInput
}

input VoteUpdateWithoutVideoDataInput {
  positive: Boolean
  user: UserUpdateOneWithoutVotesInput
  externalResource: ExternalResourceUpdateOneWithoutVotesInput
}

input VoteUpdateWithWhereUniqueWithoutExternalResourceInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutExternalResourceDataInput!
}

input VoteUpdateWithWhereUniqueWithoutUserInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutUserDataInput!
}

input VoteUpdateWithWhereUniqueWithoutVideoInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutVideoDataInput!
}

input VoteUpsertWithWhereUniqueWithoutExternalResourceInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutExternalResourceDataInput!
  create: VoteCreateWithoutExternalResourceInput!
}

input VoteUpsertWithWhereUniqueWithoutUserInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutUserDataInput!
  create: VoteCreateWithoutUserInput!
}

input VoteUpsertWithWhereUniqueWithoutVideoInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutVideoDataInput!
  create: VoteCreateWithoutVideoInput!
}

input VoteWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  positive: Boolean
  positive_not: Boolean
  user: UserWhereInput
  externalResource: ExternalResourceWhereInput
  video: VideoWhereInput
  AND: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  NOT: [VoteWhereInput!]
}

input VoteWhereUniqueInput {
  id: ID
}
`
}
